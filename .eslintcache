[{"C:\\ProJectss\\React\\Expense\\expense-tracker\\src\\index.js":"1","C:\\ProJectss\\React\\Expense\\expense-tracker\\src\\App.js":"2","C:\\ProJectss\\React\\Expense\\expense-tracker\\src\\components\\Details\\Details.jsx":"3","C:\\ProJectss\\React\\Expense\\expense-tracker\\src\\components\\Details\\styles.js":"4","C:\\ProJectss\\React\\Expense\\expense-tracker\\src\\styles.js":"5","C:\\ProJectss\\React\\Expense\\expense-tracker\\src\\components\\Main\\Main.jsx":"6","C:\\ProJectss\\React\\Expense\\expense-tracker\\src\\components\\Main\\styles.js":"7","C:\\ProJectss\\React\\Expense\\expense-tracker\\src\\components\\Main\\Form\\Form.jsx":"8","C:\\ProJectss\\React\\Expense\\expense-tracker\\src\\components\\Main\\Form\\styles.js":"9","C:\\ProJectss\\React\\Expense\\expense-tracker\\src\\components\\Main\\List\\List.jsx":"10","C:\\ProJectss\\React\\Expense\\expense-tracker\\src\\components\\Main\\List\\styles.js":"11","C:\\ProJectss\\React\\Expense\\expense-tracker\\src\\context\\context.js":"12","C:\\ProJectss\\React\\Expense\\expense-tracker\\src\\context\\contextReducer.js":"13","C:\\ProJectss\\React\\Expense\\expense-tracker\\src\\utils\\formatDate.js":"14","C:\\ProJectss\\React\\Expense\\expense-tracker\\src\\constants\\categories.js":"15","C:\\ProJectss\\React\\Expense\\expense-tracker\\src\\components\\InfoCard.jsx":"16","C:\\ProJectss\\React\\Expense\\expense-tracker\\src\\components\\Snackbar\\Snackbar.jsx":"17","C:\\ProJectss\\React\\Expense\\expense-tracker\\src\\components\\Snackbar\\styles.js":"18","C:\\ProJectss\\React\\Expense\\expense-tracker\\src\\components\\index.js":"19","C:\\ProJectss\\React\\Expense\\expense-tracker\\src\\useTransactions.js":"20"},{"size":431,"mtime":1662560960889,"results":"21","hashOfConfig":"22"},{"size":1440,"mtime":1662560960823,"results":"23","hashOfConfig":"22"},{"size":727,"mtime":1662562978354,"results":"24","hashOfConfig":"22"},{"size":247,"mtime":1662560961132,"results":"25","hashOfConfig":"22"},{"size":582,"mtime":1662560960920,"results":"26","hashOfConfig":"22"},{"size":1189,"mtime":1662632259109,"results":"27","hashOfConfig":"22"},{"size":514,"mtime":1662560961188,"results":"28","hashOfConfig":"22"},{"size":4953,"mtime":1662562890704,"results":"29","hashOfConfig":"22"},{"size":247,"mtime":1662560961256,"results":"30","hashOfConfig":"22"},{"size":1405,"mtime":1662563038087,"results":"31","hashOfConfig":"22"},{"size":416,"mtime":1662560961332,"results":"32","hashOfConfig":"22"},{"size":2032,"mtime":1662560961537,"results":"33","hashOfConfig":"22"},{"size":583,"mtime":1662560961586,"results":"34","hashOfConfig":"22"},{"size":335,"mtime":1662562595717,"results":"35","hashOfConfig":"22"},{"size":1520,"mtime":1662562343589,"results":"36","hashOfConfig":"22"},{"size":464,"mtime":1662562139591,"results":"37","hashOfConfig":"22"},{"size":797,"mtime":1662560961366,"results":"38","hashOfConfig":"22"},{"size":206,"mtime":1662560961406,"results":"39","hashOfConfig":"22"},{"size":216,"mtime":1662560961056,"results":"40","hashOfConfig":"22"},{"size":1124,"mtime":1662560960948,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"14cdxkj",{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"C:\\ProJectss\\React\\Expense\\expense-tracker\\src\\index.js",[],["84","85"],"C:\\ProJectss\\React\\Expense\\expense-tracker\\src\\App.js",[],"C:\\ProJectss\\React\\Expense\\expense-tracker\\src\\components\\Details\\Details.jsx",[],"C:\\ProJectss\\React\\Expense\\expense-tracker\\src\\components\\Details\\styles.js",[],"C:\\ProJectss\\React\\Expense\\expense-tracker\\src\\styles.js",[],"C:\\ProJectss\\React\\Expense\\expense-tracker\\src\\components\\Main\\Main.jsx",[],"C:\\ProJectss\\React\\Expense\\expense-tracker\\src\\components\\Main\\styles.js",[],"C:\\ProJectss\\React\\Expense\\expense-tracker\\src\\components\\Main\\Form\\Form.jsx",["86"],"import React, { useState, useContext, useEffect } from 'react';\r\nimport { TextField, Typography, Grid, Button, FormControl, InputLabel, Select, MenuItem } from '@material-ui/core';\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport { useSpeechContext } from '@speechly/react-client';\r\nimport Snackbar from '../../Snackbar/Snackbar';\r\nimport formatDate from '../../../utils/formatDate';\r\nimport { ExpenseTrackerContext } from '../../../context/context';\r\nimport { incomeCategories, expenseCategories } from '../../../constants/categories';\r\nimport useStyles from './styles';\r\n\r\nconst initialState = {\r\n  amount: '',\r\n  category: '',\r\n  type: 'Income',\r\n  date: formatDate(new Date()),\r\n};\r\n\r\nconst NewTransactionForm = () => {\r\n  const classes = useStyles();\r\n  const { addTransaction } = useContext(ExpenseTrackerContext);\r\n  const [formData, setFormData] = useState(initialState);\r\n  const { segment } = useSpeechContext();\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const createTransaction = () => {\r\n    if (Number.isNaN(Number(formData.amount)) || !formData.date.includes('-')) return;\r\n\r\n    if (incomeCategories.map((iC) => iC.type).includes(formData.category)) {\r\n      setFormData({ ...formData, type: 'Income' });\r\n    } else if (expenseCategories.map((iC) => iC.type).includes(formData.category)) {\r\n      setFormData({ ...formData, type: 'Expense' });\r\n    }\r\n\r\n    setOpen(true);\r\n    addTransaction({ ...formData, amount: Number(formData.amount), id: uuidv4() });\r\n    setFormData(initialState);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (segment) {\r\n      if (segment.intent.intent === 'add_expense') {\r\n        setFormData({ ...formData, type: 'Expense' });\r\n      } else if (segment.intent.intent === 'add_income') {\r\n        setFormData({ ...formData, type: 'Income' });\r\n      } else if (segment.isFinal && segment.intent.intent === 'create_transaction') {\r\n        return createTransaction();\r\n      } else if (segment.isFinal && segment.intent.intent === 'cancel_transaction') {\r\n        return setFormData(initialState);\r\n      }\r\n\r\n      segment.entities.forEach((s) => {\r\n        const category = `${s.value.charAt(0)}${s.value.slice(1).toLowerCase()}`;\r\n\r\n        switch (s.type) {\r\n          case 'amount':\r\n            setFormData({ ...formData, amount: s.value });\r\n            break;\r\n          case 'category':\r\n            if (incomeCategories.map((iC) => iC.type).includes(category)) {\r\n              setFormData({ ...formData, type: 'Income', category });\r\n            } else if (expenseCategories.map((iC) => iC.type).includes(category)) {\r\n              setFormData({ ...formData, type: 'Expense', category });\r\n            }\r\n            break;\r\n          case 'date':\r\n            setFormData({ ...formData, date: s.value });\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      });\r\n\r\n      if (segment.isFinal && formData.amount && formData.category && formData.type && formData.date) {\r\n        createTransaction();\r\n      }\r\n    }\r\n  }, [segment,formData]);\r\n\r\n  const selectedCategories = formData.type === 'Income' ? incomeCategories : expenseCategories;\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <Snackbar open={open} setOpen={setOpen} />\r\n      <Grid item xs={12}>\r\n        <Typography align=\"center\" variant=\"subtitle2\" gutterBottom>\r\n        {segment ? (\r\n        <div className=\"segment\">\r\n          {segment.words.map((w) => w.value).join(\" \")}\r\n        </div>\r\n      ) : null}\r\n         {/* {isSpeaking ? <BigTranscript /> : 'Start adding transactions'}  */}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <FormControl fullWidth>\r\n          <InputLabel>Type</InputLabel>\r\n          <Select value={formData.type} onChange={(e) => setFormData({ ...formData, type: e.target.value })}>\r\n            <MenuItem value=\"Income\">Income</MenuItem>\r\n            <MenuItem value=\"Expense\">Expense</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <FormControl fullWidth>\r\n          <InputLabel>Category</InputLabel>\r\n          <Select value={formData.category} onChange={(e) => setFormData({ ...formData, category: e.target.value })}>\r\n            {selectedCategories.map((c) => <MenuItem key={c.type} value={c.type}>{c.type}</MenuItem>)}\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n\r\n      <Grid item xs={6}>\r\n        <TextField type=\"number\" label=\"Amount\" value={formData.amount} onChange={(e) => setFormData({ ...formData, amount: e.target.value })} fullWidth />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField fullWidth label=\"Date\" type=\"date\" value={formData.date} onChange={(e) => setFormData({ ...formData, date: formatDate(e.target.value) })} />\r\n      </Grid>\r\n      <Button className={classes.button} variant=\"outlined\" color=\"primary\" fullWidth onClick={createTransaction}>Create</Button>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default NewTransactionForm;","C:\\ProJectss\\React\\Expense\\expense-tracker\\src\\components\\Main\\Form\\styles.js",[],"C:\\ProJectss\\React\\Expense\\expense-tracker\\src\\components\\Main\\List\\List.jsx",[],"C:\\ProJectss\\React\\Expense\\expense-tracker\\src\\components\\Main\\List\\styles.js",[],"C:\\ProJectss\\React\\Expense\\expense-tracker\\src\\context\\context.js",[],"C:\\ProJectss\\React\\Expense\\expense-tracker\\src\\context\\contextReducer.js",[],"C:\\ProJectss\\React\\Expense\\expense-tracker\\src\\utils\\formatDate.js",[],"C:\\ProJectss\\React\\Expense\\expense-tracker\\src\\constants\\categories.js",[],"C:\\ProJectss\\React\\Expense\\expense-tracker\\src\\components\\InfoCard.jsx",[],"C:\\ProJectss\\React\\Expense\\expense-tracker\\src\\components\\Snackbar\\Snackbar.jsx",[],"C:\\ProJectss\\React\\Expense\\expense-tracker\\src\\components\\Snackbar\\styles.js",[],"C:\\ProJectss\\React\\Expense\\expense-tracker\\src\\components\\index.js",[],"C:\\ProJectss\\React\\Expense\\expense-tracker\\src\\useTransactions.js",[],{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":78,"column":6,"nodeType":"93","endLine":78,"endColumn":24,"suggestions":"94"},"no-native-reassign",["95"],"no-negated-in-lhs",["96"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'createTransaction'. Either include it or remove the dependency array.","ArrayExpression",["97"],"no-global-assign","no-unsafe-negation",{"desc":"98","fix":"99"},"Update the dependencies array to be: [segment, formData, createTransaction]",{"range":"100","text":"101"},[3006,3024],"[segment, formData, createTransaction]"]